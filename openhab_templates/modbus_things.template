${tcp(tcp_data['host'], tcp_data['port'], tcp_data['id'], tcp_data['name'])} {
    % for type, req_data in requests_data.items():
        <%
            def make_chunks(l, n):
                chunks_list = []
                curr_chunk = []
                start_addr = req_data['vars'][0]['addr']
                for var in l:
                    if (var['addr'] + var['size'] - start_addr > n):
                        chunks_list.append(curr_chunk)
                        curr_chunk = []
                        start_addr = var['addr']
                    curr_chunk.append(var)
                chunks_list.append(curr_chunk)
                return chunks_list

            chunks = make_chunks(req_data['vars'], 120)
        %>
        % for vars_chunk in chunks:
            ${poller(req_data['id'], type, vars_chunk[0]['addr'], vars_chunk[-1]['addr']-vars_chunk[0]['addr']+vars_chunk[-1]['size'], type)} {
            % for var in vars_chunk:
                % if (type == 'coil' or type == 'holding'):
                ${data_writer(var['id'], var['name'], var['addr'], var['type'], type)}
                % else:
                ${data_reader(var['id'], var['name'], var['addr'], var['type'])}
                % endif
            % endfor
    }
        % endfor    
    % endfor
}

<%def name="tcp(host, port, slave, name)">
Bridge modbus:tcp:${name} "${name}" [host="${host}", port=${port}, id=${slave}, reconnectAfterMillis=120000] \
</%def>

<%def name="poller(id, name, start, length, type)">
    Bridge poller ${id} "${name}" [start=${start}, length=${length}, type="${type}"] \
</%def>

<%def name="data_reader(id, name, readStart, readValueType)">
        Thing data ${id} "${name}" [readStart="${readStart}", readValueType="${readValueType}"] \
</%def>

<%def name="data_writer(id, name, writeStart, writeValueType, writeType)">
        Thing data ${id} "${name}" [writeStart="${writeStart}", writeValueType="${writeValueType}", writeType="${writeType}"] \
</%def>

<% 
def make_chunks(l, n):
    return [l[i::n] for i in xrange(n)]
%>


